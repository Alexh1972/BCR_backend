# Generated by Django 5.2.1 on 2025-05-21 16:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(help_text='Customer ID', max_length=255)),
                ('POSTING_DATE', models.DateField(help_text='Reporting month (EOM)')),
                ('GPI_AGE', models.IntegerField(blank=True, help_text='Client age in the current month', null=True)),
                ('GPI_CLS_CODE_PT_OCCUP', models.CharField(blank=True, choices=[('BIOLOG', 'Biolog/ Zoolog'), ('ORG_EVENIM', 'Organizator de conferinte si evenimente'), ('CONTROLORI', 'Controlori/operatori pentru trafic naval si aerian'), ('COND_VEHIC', 'Conducatori de vehicule, soferi'), ('LEGISLATOR', 'Legislatori, membri ai executivului'), ('TRADUCAT', 'Traducator/ Interpret'), ('JURIST', 'Specialisti in domeniul juridic si asimilati'), ('ANALIST_IT', 'Analist/ Programator IT'), ('AG_VANZARI', 'Lucratori in domeniul vanzarilor'), ('AUTOR', 'Autor/Jurnalist'), ('INSP_VAMAL', 'Inspectori de vama si frontiera'), ('JURNALIST', 'Jurnalist'), ('PAZA_PROT', 'Lucratori in paza si protectie'), ('FOTOGRAF', 'Fotograf'), ('ANALIST', 'Analist financiar'), ('FIZIOTERAP', 'Fizioterapeut'), ('SPORTIV', 'Atleti si sportivi'), ('MAT_STAT', 'Matematician/Statistician'), ('AG_ASIG', 'Agent de asigurari'), ('TEHNICIENI', 'Tehnicieni in domeniul medical'), ('FIZ_CHIM', 'Fizician/ Chimist'), ('PREOT', 'Preot'), ('INSP_FISC', 'Inspector fiscal'), ('SPEC_HR', 'Specialist Resurse umane'), ('BUCATAR', 'Personal hoteluri/restaurante/baruri'), ('ARTIST', 'Artist'), ('AG_IMOB', 'Agenti si administratori imobiliari'), ('PSIHOLOG', 'Sociolog/ Psiholog'), ('PERS_INGR', 'Personal de ingrijire'), ('ANTRENOR', 'Antrenori, instructori'), ('CONSULT', 'Consultant financiar'), ('DESIGNER', 'Designer grafica'), ('ASIST_SOC', 'Specialisti in asistenta sociala'), ('INVATATOR', 'Cadru didactic'), ('MED_REZID', 'Medic rezident'), ('INGINER', 'Inginer'), ('VETERINAR', 'Veterinar'), ('ALTII', 'Altii'), ('MEDIC', 'Medic'), ('AUDITOR', 'Auditor/Contabil'), ('ASIST_VET', 'Asistenti veterinari'), ('ASIST_MED', 'Asistenti in domeniul medical'), ('NOTAR', 'Notar'), ('FUNCTIONAR', 'Functionari de birou'), ('PENS', 'Pensionari'), ('ANG_POL', 'Angajati in politie si jandarmerie'), ('COPII', 'Copii/Adolescenti'), ('STUD', 'Studenti'), ('ARHITECT', 'Arhitect'), ('NECALIF', 'Muncitori necalificati'), ('MAGISTRAT', 'Magistrat (judecatori, procurori)'), ('PENS_MIRA', 'Pensionari MIRA/MAPN'), ('ANG_ARMAT', 'Angajati in cadrul fortelor armate'), ('FARMA', 'Farmacist'), ('ECONOM', 'Economist'), ('STOM', 'Stomatolog'), ('INTREP', 'Liber Intreprinzatori'), ('ANG_PUB', 'Angajati in serviciul public'), ('PROFESOR', 'Profesori in inv superior, secundar si asimilati'), ('PERS_NEANG', 'Persoane neangajate'), ('CALIF', 'Meseriasi si muncitori calificati'), ('DIRECTOR', 'Directori generali, directori si asimilati'), ('COND_FUNC', 'Conducatori si functionari superiori in adm publ'), ('AVOCAT', 'Avocat'), ('EVAL', 'Evaluator'), ('PASTOR', 'Pastor')], help_text='Party classification for occupation code', max_length=255, null=True)),
                ('GPI_CLS_PT_EDU_DESC', models.CharField(blank=True, help_text='Party classification for education', max_length=255, null=True)),
                ('GPI_COUNTY_NAME', models.CharField(blank=True, help_text='Client county domicile', max_length=255, null=True)),
                ('GPI_DOMICILE_TYPE', models.CharField(blank=True, choices=[('Urban', 'Urban'), ('Rural', 'Rural')], help_text='Client domicile type (Urban/Rural)', max_length=50, null=True)),
                ('GPI_GENDER_CODE', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Unknown')], help_text='Party gender', max_length=10, null=True)),
                ('GPI_MARITAL_SATUS_CODE', models.CharField(blank=True, choices=[('D', 'Divortat'), ('C', 'Casatorit'), ('X', 'Unknown'), ('V', 'Vaduv'), ('N', 'Necasatorit')], help_text='Party marital status', max_length=10, null=True)),
                ('GPI_REGION_NAME', models.CharField(blank=True, help_text='Client region domicile', max_length=255, null=True)),
                ('GPI_CUSTOMER_TYPE_DESC', models.CharField(blank=True, choices=[('STAND', 'Mass Market'), ('INDIV', 'Mass Affluent')], help_text='Party type (mass market, mass affluent)', max_length=255, null=True)),
                ('CLIENT_TENURE', models.IntegerField(blank=True, help_text='Client tenure - calculated as difference between posting date and the first account opening date', null=True)),
                ('CLIENT_TENURE_ACTIVE_ACC', models.IntegerField(blank=True, help_text='Number of days since the first active account opened', null=True)),
                ('PTS_CIC_OPENED_ND', models.IntegerField(blank=True, help_text='Number of days since the CIC opening', null=True)),
                ('PTS_CLIENT_STATUS_ND', models.IntegerField(blank=True, help_text="Number of days since the last 'Client' status from Sibcor", null=True)),
                ('PTS_LST_SALARY_ND', models.IntegerField(blank=True, help_text='Number of days since the last salary received in the last month', null=True)),
                ('ICC_LST_USE_ND', models.IntegerField(blank=True, help_text='Number of days since the last credit card transaction for credit cards', null=True)),
                ('CLO_LST_ACC_CLOSE_ND', models.IntegerField(blank=True, help_text='Number of days from closing the last product for unsecured loans', null=True)),
                ('CLO_MAX_MAT_LEFT_ACT_ND', models.IntegerField(blank=True, help_text='Maximum number of days to maturity for active products for unsecured loans', null=True)),
                ('DEP_MAX_MAT_LEFT_ACT_ND', models.IntegerField(blank=True, help_text='Maximum number of days to maturity for active products for deposits', null=True)),
                ('CRT_LST_ACC_CLOSE_ND', models.IntegerField(blank=True, help_text='Number of days from closing the last product for current accounts', null=True)),
                ('CRT_FST_ACC_ACTIVE_OPEN_ND', models.IntegerField(blank=True, help_text='Number of days from opening the first active product for current accounts', null=True)),
                ('CEC_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of all active economies', null=True)),
                ('CEC_ALL_PROD_CNT', models.IntegerField(blank=True, help_text='Number of all economies account (active or not)', null=True)),
                ('CLO_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of active products for unsecured loans', null=True)),
                ('CLO_ALL_PROD_CNT', models.IntegerField(blank=True, help_text='Number of all products until posting date for unsecured loans', null=True)),
                ('CRT_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of active products for current accounts', null=True)),
                ('DEP_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of active products for deposits', null=True)),
                ('DEP_ALL_PROD_CNT', models.IntegerField(blank=True, help_text='Number of all products until posting date for deposits', null=True)),
                ('ICC_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of active products for credit cards', null=True)),
                ('ICC_ALL_PROD_CNT', models.IntegerField(blank=True, help_text='Number of all products until posting date for credit cards', null=True)),
                ('INS_VIG_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of VIG insurance policies', null=True)),
                ('INV_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of active investments products in month', null=True)),
                ('PPI_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of payment protection insurances', null=True)),
                ('REFIN_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of active refinancings at the end of the posting month', null=True)),
                ('REFIN_ALL_PROD_CNT', models.IntegerField(blank=True, help_text='Number of all refinancings until the end of the posting month', null=True)),
                ('TER_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of all active term deposits', null=True)),
                ('TER_ALL_PROD_CNT', models.IntegerField(blank=True, help_text='Number of all term deposits (active or not)', null=True)),
                ('OT_COLT_ALL_PROD_CNT', models.IntegerField(blank=True, help_text='Number of all products until posting date for collateral deposits', null=True)),
                ('OT_COLT_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of active products for collateral deposits', null=True)),
                ('LOA_ALL_PROD_CNT', models.IntegerField(blank=True, help_text='Number of all products until posting date for loans', null=True)),
                ('LOA_ALL_ACTIVE_CNT', models.IntegerField(blank=True, help_text='Number of active products for loans', null=True)),
                ('CRT_ALL_PROD_CNT', models.IntegerField(blank=True, help_text='Number of all products until posting date for current accounts', null=True)),
                ('CRT_ACTIVE_FC_CNT', models.IntegerField(blank=True, help_text='Number of active products in home currency for current accounts', null=True)),
                ('CRT_ACTIVE_FX_CNT', models.IntegerField(blank=True, help_text='Number of active products in foreign currency for current accounts', null=True)),
                ('CEC_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for saving accounts', max_digits=20, null=True)),
                ('CEC_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance amount for savings accounts at the end of the month', max_digits=20, null=True)),
                ('CLO_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for unsecured loans', max_digits=20, null=True)),
                ('CLO_MAX_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum balance amount for unsecured loans', max_digits=20, null=True)),
                ('CLO_MIN_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum balance amount for unsecured loans', max_digits=20, null=True)),
                ('CLO_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance amount at the end of the month for unsecured loans', max_digits=20, null=True)),
                ('CRT_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for current accounts', max_digits=20, null=True)),
                ('CRT_MAX_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum balance amount for current accounts', max_digits=20, null=True)),
                ('CRT_MIN_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum balance amount for current accounts', max_digits=20, null=True)),
                ('CRT_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance amount at the end of the month for current accounts', max_digits=20, null=True)),
                ('DEP_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for deposits', max_digits=20, null=True)),
                ('DEP_MAX_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum balance amount for deposits', max_digits=20, null=True)),
                ('DEP_MIN_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum balance amount for deposits', max_digits=20, null=True)),
                ('DEP_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance amount at the end of the month for deposits', max_digits=20, null=True)),
                ('DTER_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for term deposits', max_digits=20, null=True)),
                ('DTER_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance amount for term deposits at the end of the month', max_digits=20, null=True)),
                ('ICC_MAX_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum balance amount for credit cards', max_digits=20, null=True)),
                ('ICC_MIN_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum balance amount for credit cards', max_digits=20, null=True)),
                ('ICC_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance amount at the end of the month for credit cards', max_digits=20, null=True)),
                ('OVD_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for overdraft', max_digits=20, null=True)),
                ('OVD_MAX_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum balance amount for overdraft', max_digits=20, null=True)),
                ('OVD_MIN_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum balance amount for overdraft', max_digits=20, null=True)),
                ('OVD_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance amount at the end of the month for overdraft', max_digits=20, null=True)),
                ('SAV_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for saving plans', max_digits=20, null=True)),
                ('SAV_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance for saving plans at the end of the month', max_digits=20, null=True)),
                ('OT_COLT_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance amount at the end of the month for collateral deposits', max_digits=20, null=True)),
                ('OT_COLT_MIN_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum balance amount for collateral deposits', max_digits=20, null=True)),
                ('OT_COLT_MAX_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum balance amount for collateral deposits', max_digits=20, null=True)),
                ('OT_COLT_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for collateral deposits', max_digits=20, null=True)),
                ('LOA_TOTAL_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total balance amount at the end of the month for loans', max_digits=20, null=True)),
                ('LOA_MIN_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum balance amount for loans', max_digits=20, null=True)),
                ('LOA_MAX_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum balance amount for loans', max_digits=20, null=True)),
                ('LOA_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for loans', max_digits=20, null=True)),
                ('ICC_AVG_BALANCE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Average balance amount for credit cards', max_digits=20, null=True)),
                ('CRT_GEORGE_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has an active George CA as of end of the month', null=True)),
                ('PTS_IB_FLAG', models.BooleanField(blank=True, help_text='Internet banking flag (George)', null=True)),
                ('APPLE_PAY_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has Apple Pay as of end of the posting month', null=True)),
                ('GEORGE_PAY_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has George Pay as of end of the posting month', null=True)),
                ('GOOGLE_PAY_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has Google Pay as of end of the posting month', null=True)),
                ('WALLET_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has at least one card enrolled in wallet as of end of the posting month', null=True)),
                ('PBS_FLAG', models.BooleanField(blank=True, help_text='PBS flag based on party benefit packages', null=True)),
                ('DIRECT_DEBIT_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has Direct Debit as of end of the posting month', null=True)),
                ('GEORGE_INFO_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has George Info as of end of the posting month (push notification)', null=True)),
                ('LOA_REFUND_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has a loan refund in month', null=True)),
                ('LOA_TOTAL_REFUND_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has a total loan refund in month', null=True)),
                ('MONEYBACK_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if the client has Money Back (cash-back service) as of end of the posting month', null=True)),
                ('PTS_CODEBTOR_STATUS_FLAG', models.BooleanField(blank=True, help_text='Flag 1/0 if party is codebtor for other party loans', null=True)),
                ('OVD_APPROVED_LIMIT_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Overdraft approved limit', max_digits=20, null=True)),
                ('OVD_REMAINING_LIMIT_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Overdraft remaining limit at the end of the posting month', max_digits=20, null=True)),
                ('OVD_REMAINING_LIMIT_AMT_AVG', models.DecimalField(blank=True, decimal_places=2, help_text='Average overdraft remaining limit in the posting month', max_digits=20, null=True)),
                ('OVD_REMAINING_LIMIT_AMT_MIN', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum overdraft remaining limit in the posting month', max_digits=20, null=True)),
                ('ICC_APPROVED_LIMIT', models.DecimalField(blank=True, decimal_places=2, help_text='Approved limit for credit cards', max_digits=20, null=True)),
                ('ICC_REMAINING_LIMIT_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Overdraft remaining limit at the end of the posting month (Note: description says overdraft but field name is ICC)', max_digits=20, null=True)),
                ('CLO_APPROVED_LIMIT', models.DecimalField(blank=True, decimal_places=2, help_text='Approved limit for unsecured loans', max_digits=20, null=True)),
                ('TRX_IN_ALL_CNT', models.IntegerField(blank=True, help_text='Number of incoming payments', null=True)),
                ('TRX_IN_ATM_CNT', models.IntegerField(blank=True, help_text='Total number of ATM/APT/MFM/NCR inflows in the posting month', null=True)),
                ('TRX_IN_OTH_BNK_CNT', models.IntegerField(blank=True, help_text='Number of other banks receipts in the current month', null=True)),
                ('TRX_IN_OTH_COUNTRY_CNT', models.IntegerField(blank=True, help_text='Number of other country receipts in the current month', null=True)),
                ('TRX_OUT_ALL_CNT', models.IntegerField(blank=True, help_text='Number of outgoing payments', null=True)),
                ('TRX_OUT_ATM_CNT', models.IntegerField(blank=True, help_text='Total number of ATM/APT/MFM/NCR outflows in the posting month', null=True)),
                ('TRX_OUT_CASH_CNT', models.IntegerField(blank=True, help_text='Number of outgoing transactions in the current month', null=True)),
                ('TRX_OUT_EC_CNT', models.IntegerField(blank=True, help_text='Number of e-commerce transactions in the current month', null=True)),
                ('TRX_OUT_IB_CNT', models.IntegerField(blank=True, help_text='Number of internet banking transactions in the current month', null=True)),
                ('TRX_OUT_INTER_TRANSFERS_CNT', models.IntegerField(blank=True, help_text='Number of interbanking transfers in the posting month', null=True)),
                ('TRX_OUT_OFF_DESK_CNT', models.IntegerField(blank=True, help_text='Number of office desk transactions in the current month', null=True)),
                ('TRX_OUT_OTH_COUNTRY_CNT', models.IntegerField(blank=True, help_text='Number of other country transactions in the current month', null=True)),
                ('TRX_OUT_POS_CNT', models.IntegerField(blank=True, help_text='POS number of transactions in the current month', null=True)),
                ('ICC_TRX_ATM_CNT', models.IntegerField(blank=True, help_text='Number of ATM withdrawals with credit card for credit cards', null=True)),
                ('PTS_REJECTED_LOANS_REQ_CNT', models.IntegerField(blank=True, help_text='Total number of rejected loan requests', null=True)),
                ('PTS_TOTAL_LOANS_REQ_CNT', models.IntegerField(blank=True, help_text='Total number of loan requests', null=True)),
                ('TRX_IN_ALL_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total amount of incoming payments', max_digits=20, null=True)),
                ('TRX_IN_ATM_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total amount of ATM/APT/MFM/NCR inflows in the posting month', max_digits=20, null=True)),
                ('TRX_IN_CRT_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total amount of current account inflows in the posting month', max_digits=20, null=True)),
                ('TRX_IN_OTH_BNK_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Other banks receipts amount in the current month', max_digits=20, null=True)),
                ('TRX_IN_OTH_COUNTRY_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Other country receipts amount in the current month', max_digits=20, null=True)),
                ('TRX_OUT_ALL_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total amount of outgoing payments', max_digits=20, null=True)),
                ('TRX_OUT_ATM_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total amount of ATM/APT/MFM/NCR outflows in the posting month', max_digits=20, null=True)),
                ('TRX_OUT_CASH_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Outgoing cash transactions in the current month', max_digits=20, null=True)),
                ('TRX_OUT_EC_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='E-commerce transactions amount in the current month', max_digits=20, null=True)),
                ('TRX_OUT_IB_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Internet banking transactions amount in the current month', max_digits=20, null=True)),
                ('TRX_OUT_INTER_TRANSFERS_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total amount of interbanking transfers in the posting month', max_digits=20, null=True)),
                ('TRX_OUT_OFF_DESK_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Office desk transactions amount in the current month', max_digits=20, null=True)),
                ('TRX_OUT_OTH_COUNTRY_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Other country transactions amount in the current month', max_digits=20, null=True)),
                ('TRX_OUT_POS_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='POS transactions amount in the current month', max_digits=20, null=True)),
                ('ICC_TRX_ATM_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Total ATM amount withdrawals with credit card for credit cards', max_digits=20, null=True)),
                ('MCC_UTILITY_SERV_CNT', models.IntegerField(blank=True, help_text='Number of utility services MCC transactions', null=True)),
                ('MCC_UTILITY_SERV_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of utility services MCC transactions', max_digits=20, null=True)),
                ('MCC_TRAVEL_CNT', models.IntegerField(blank=True, help_text='Number of travel MCC transactions', null=True)),
                ('MCC_TRAVEL_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of travel MCC transactions', max_digits=20, null=True)),
                ('MCC_TRANSPORTATION_CNT', models.IntegerField(blank=True, help_text='Number of transportation MCC transactions', null=True)),
                ('MCC_TRANSPORTATION_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of transportation MCC transactions', max_digits=20, null=True)),
                ('MCC_RETAIL_OUTLET_SERV_CNT', models.IntegerField(blank=True, help_text='Number of retail outlet services MCC transactions', null=True)),
                ('MCC_RETAIL_OUTLET_SERV_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of retail outlet services MCC transactions', max_digits=20, null=True)),
                ('MCC_PROFESSIONAL_SERV_CNT', models.IntegerField(blank=True, help_text='Number of professional services and membership organizations MCC transactions', null=True)),
                ('MCC_PROFESSIONAL_SERV_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of professional services and membership organizations MCC transactions', max_digits=20, null=True)),
                ('MCC_MONEY_TRANSFER_CNT', models.IntegerField(blank=True, help_text='Number of money transfer MCC transactions', null=True)),
                ('MCC_MONEY_TRANSFER_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of money transfer MCC transactions', max_digits=20, null=True)),
                ('MCC_MISCELLANEOUS_STORES_CNT', models.IntegerField(blank=True, help_text='Number of miscellaneous stores MCC transactions', null=True)),
                ('MCC_MISCELLANEOUS_STORES_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of miscellaneous stores MCC transactions', max_digits=20, null=True)),
                ('MCC_LEISURE_CNT', models.IntegerField(blank=True, help_text='Number of leisure MCC transactions', null=True)),
                ('MCC_LEISURE_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of leisure MCC transactions', max_digits=20, null=True)),
                ('MCC_HOME_AND_CONSTR_CNT', models.IntegerField(blank=True, help_text='Number of home and construction MCC transactions', null=True)),
                ('MCC_HOME_AND_CONSTR_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of home and construction MCC transactions', max_digits=20, null=True)),
                ('MCC_GOVERNMENT_SERV_CNT', models.IntegerField(blank=True, help_text='Number of government services MCC transactions', null=True)),
                ('MCC_GOVERNMENT_SERV_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of government services MCC transactions', max_digits=20, null=True)),
                ('MCC_FOOD_CNT', models.IntegerField(blank=True, help_text='Number of food MCC transactions', null=True)),
                ('MCC_FOOD_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of food MCC transactions', max_digits=20, null=True)),
                ('MCC_FINANCIAL_INST_CNT', models.IntegerField(blank=True, help_text='Number of financial institutions MCC transactions', null=True)),
                ('MCC_FINANCIAL_INST_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of financial institutions MCC transactions', max_digits=20, null=True)),
                ('MCC_ELECT_AND_DIG_GOODS_CNT', models.IntegerField(blank=True, help_text='Number of electronic and digital goods MCC transactions', null=True)),
                ('MCC_ELECT_AND_DIG_GOODS_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of electronic and digital goods MCC transactions', max_digits=20, null=True)),
                ('MCC_CONTRACTED_SERV_CNT', models.IntegerField(blank=True, help_text='Number of contracted services MCC transactions', null=True)),
                ('MCC_CONTRACTED_SERV_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of contracted services MCC transactions', max_digits=20, null=True)),
                ('MCC_CLOTHING_STORES_CNT', models.IntegerField(blank=True, help_text='Number of clothing stores MCC transactions', null=True)),
                ('MCC_CLOTHING_STORES_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of clothing stores MCC transactions', max_digits=20, null=True)),
                ('MCC_CAR_RENTAL_CNT', models.IntegerField(blank=True, help_text='Number of car rental MCC transactions', null=True)),
                ('MCC_CAR_RENTAL_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of car rental MCC transactions', max_digits=20, null=True)),
                ('MCC_BUSINESS_SERV_CNT', models.IntegerField(blank=True, help_text='Number of business services MCC transactions', null=True)),
                ('MCC_BUSINESS_SERV_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of business services MCC transactions', max_digits=20, null=True)),
                ('MCC_BANKING_ALTER_CNT', models.IntegerField(blank=True, help_text='Number of banking alternative MCC transactions', null=True)),
                ('MCC_BANKING_ALTER_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of banking alternative MCC transactions', max_digits=20, null=True)),
                ('MCC_AGRICULTURAL_CNT', models.IntegerField(blank=True, help_text='Number of agricultural MCC transactions', null=True)),
                ('MCC_AGRICULTURAL_AMT', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of agricultural MCC transactions', max_digits=20, null=True)),
                ('CHNL_BRANCH_SCANS_CNT', models.IntegerField(blank=True, help_text='Number of branch ID scans in the posting month', null=True)),
                ('CHNL_BRANCH_SCANS_DAYS_CNT', models.IntegerField(blank=True, help_text='Number of days with branch ID scans in the posting month', null=True)),
                ('CHNL_IB_LOGINS_CNT', models.IntegerField(blank=True, help_text='Number of Internet Banking logins', null=True)),
                ('CHNL_INBOUND_CALLS_CNT', models.IntegerField(blank=True, help_text='Number of inbound call center calls', null=True)),
                ('CHNL_INBOUND_CALLS_DAYS_CNT', models.IntegerField(blank=True, help_text='Number of days with Contact Center inbound calls in the posting month', null=True)),
                ('ICC_UTILIZATION_GRADE', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum utilization grade per day in month for credit cards', max_digits=5, null=True)),
                ('OVD_UTILIZATION_GRADE', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum utilization grade per day in month for overdraft', max_digits=5, null=True)),
            ],
            options={
                'verbose_name': 'Customer Data Entry',
                'verbose_name_plural': 'Customer Data Entries',
            },
        ),
    ]
